name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install dependencies
      run: |
        cd server
        npm ci
    
    - name: Lint code
      run: |
        cd server
        npm run lint
    
    - name: Check code formatting
      run: |
        cd server
        npm run format:check
    
    - name: Run tests
      run: |
        cd server
        npm test
      env:
        NODE_ENV: test
        MONGO_URI: mongodb://root:password@localhost:27017/m7rnetwork_test?authSource=admin
        JWT_SECRET: test_jwt_secret_key
    
    - name: Build Docker image
      run: docker build -t m7rnetwork .
    
    - name: Test Docker container
      run: |
        docker run -d --name test-container -p 5000:5000 m7rnetwork
        sleep 10
        curl -f http://localhost:5000 || exit 1
        docker stop test-container
        docker rm test-container

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Deployment step - integrate with your hosting provider"
        # Add deployment commands here (e.g., push to Docker registry, deploy to cloud)
